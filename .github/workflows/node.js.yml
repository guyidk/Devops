# name: Full CI/CD

# on:
#   workflow_dispatch:

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code from GitHub Repo
#         uses: actions/checkout@v3
        
#       - name: Setup Node.js in Ubuntu
#         uses: actions/setup-node@v3
#         with:
#           node-version: 18
          
#       - name: Remove existing node_modules folder from cloned project
#         run: rm -rf /home/runner/work/DEVOPS-Book_Track/DEVOPS-Book_Track/node_modules/* 
        
#       - name: Install dependencies based on package.json
#         run: npm install
        
#       - name: Run backend tests using jest in "jest-test" folder
#         run: npm run backend-test-jest

#       - name: Instrument the frontend code
#         run: npm run frontend-instrument
        
#       - name: Run the frontend test cases
#         run: npm run frontend-test-electron

#   build-and-deploy:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Login to DockerHub
#         uses: docker/login-action@v2
#         with:
#           username: ${{ secrets.DOCKER_USERNAME }}
#           password: ${{ secrets.DOCKER_PASSWORD }}

#       - name: Build and Push Docker images
#         uses: docker/build-push-action@v2
#         with:
#           context: .
#           dockerfile: DockerFile
#           push: true
#           tags: ${{ secrets.DOCKER_USERNAME }}/bt-docker-img:latest
          
#       - name: Azure Login
#         uses: azure/login@v1
#         with:
#           creds: ${{ secrets.AZURE_CREDENTIALS }}

#       - name: Set up AKS cluster
#         run: |
#           az aks show --resource-group btResourceGroup --name btAKSCluster -o json >nul 2>nul || az aks create --resource-group btResourceGroup --name btAKSCluster --node-count 1 --generate-ssh-keys 2>&1

#       - name: Get AKS credentials
#         run: |
#           az aks get-credentials --resource-group btResourceGroup --name btAKSCluster --overwrite-existing

#       - name: Deploy to Kubernetes
#         run: |
#           kubectl apply -f bt-deployment.yaml
#           kubectl apply -f bt-service.yaml

#       - name: Verify Deployment
#         run: |
#           kubectl rollout history deployment/bt-deployment
#           kubectl get pods
#           kubectl get services
